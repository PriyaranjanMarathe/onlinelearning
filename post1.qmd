---
title: "FAISS Vector Search in Quarto"
format: html
execute:
  freeze: auto  # Ensures results are cached
---

## **Vector Database with FAISS in Python**

This document demonstrates how to use **FAISS** for efficient similarity search with random vectors.

```{python}
import numpy as np
import faiss

# Step 1: Create a random dataset of 10000 vectors (128 dimensions)
num_vectors = 10000
dim = 128
vectors = np.random.rand(num_vectors, dim).astype('float32')

# Step 2: Create a FAISS index
index = faiss.IndexFlatL2(dim)  # L2 (Euclidean) distance
index.add(vectors)  # Add vectors to the index

# Step 3: Query the index with a random vector
query_vector = np.random.rand(1, dim).astype('float32')  # A single query vector
D, I = index.search(query_vector, k=5)  # Get 5 nearest neighbors

# Step 4: Display results
I, D
